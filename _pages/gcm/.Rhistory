library(dplyr)
library(ggplot2)
library(lubridate)
library(reticulate)
library(extrafont)
gc.mon <- function(query, prgrm = 'PhD') {
writeLines(query, 'query.txt')
source_python('main.py')
gc <- read.csv('tmp.csv')
colnames(gc)
tab <- gc %>%
filter(
stringr::str_detect(과정, prgrm) &
stringr::str_detect(결과, 'Accepted|Rejected|Wait listed')
) %>%
mutate(on = strptime(on, '%d %b %Y') %>% ymd,
게시날짜 = strptime(게시날짜, '%d %b %Y') %>% ymd) %>%
arrange(desc(on))
return(tab)
}
(df <- gc.mon('duke bio*'))
parent.frame()
?source_python()
gc.mon <- function(query, prgrm = 'PhD') {
writeLines(query, 'query.txt')
source_python('main.py', NULL)
gc <- read.csv('tmp.csv')
colnames(gc)
tab <- gc %>%
filter(
stringr::str_detect(과정, prgrm) &
stringr::str_detect(결과, 'Accepted|Rejected|Wait listed')
) %>%
mutate(on = strptime(on, '%d %b %Y') %>% ymd,
게시날짜 = strptime(게시날짜, '%d %b %Y') %>% ymd) %>%
arrange(desc(on))
return(tab)
}
(df <- gc.mon('duke bio*'))
?py_run_file()
?py_run_file_impl
py_run_file_impl
(df <- gc.mon('duke bio*'))
import('pandas')
reticulate::conda_list()
reticulate::conda_python()
reticulate::conda_python('nlp')
reticulate::conda_python('base')
reticulate::py_config()
?use_python()
use_python('/usr/local/Caskroom/miniconda/base')
gc.mon <- function(query, prgrm = 'PhD') {
writeLines(query, 'query.txt')
source_python('main.py', NULL)
gc <- read.csv('tmp.csv')
colnames(gc)
tab <- gc %>%
filter(
stringr::str_detect(과정, prgrm) &
stringr::str_detect(결과, 'Accepted|Rejected|Wait listed')
) %>%
mutate(on = strptime(on, '%d %b %Y') %>% ymd,
게시날짜 = strptime(게시날짜, '%d %b %Y') %>% ymd) %>%
arrange(desc(on))
return(tab)
}
(df <- gc.mon('duke bio*'))
reticulate::py_config()
use_condaenv('/usr/local/Caskroom/miniconda/base')
gc.mon <- function(query, prgrm = 'PhD') {
writeLines(query, 'query.txt')
source_python('main.py', NULL)
gc <- read.csv('tmp.csv')
colnames(gc)
tab <- gc %>%
filter(
stringr::str_detect(과정, prgrm) &
stringr::str_detect(결과, 'Accepted|Rejected|Wait listed')
) %>%
mutate(on = strptime(on, '%d %b %Y') %>% ymd,
게시날짜 = strptime(게시날짜, '%d %b %Y') %>% ymd) %>%
arrange(desc(on))
return(tab)
}
(df <- gc.mon('duke bio*'))
use_condaenv('base')
gc.mon <- function(query, prgrm = 'PhD') {
writeLines(query, 'query.txt')
source_python('main.py', NULL)
gc <- read.csv('tmp.csv')
colnames(gc)
tab <- gc %>%
filter(
stringr::str_detect(과정, prgrm) &
stringr::str_detect(결과, 'Accepted|Rejected|Wait listed')
) %>%
mutate(on = strptime(on, '%d %b %Y') %>% ymd,
게시날짜 = strptime(게시날짜, '%d %b %Y') %>% ymd) %>%
arrange(desc(on))
return(tab)
}
(df <- gc.mon('duke bio*'))
py_config()
?use_miniconda()
use_miniconda('base')
?install_miniconda()
conda_list()
use_miniconda('cv')
?install_miniconda()
use_python('/usr/local/Caskroom/miniconda/base/bin/python')
gc.mon <- function(query, prgrm = 'PhD') {
writeLines(query, 'query.txt')
source_python('main.py', NULL)
gc <- read.csv('tmp.csv')
colnames(gc)
tab <- gc %>%
filter(
stringr::str_detect(과정, prgrm) &
stringr::str_detect(결과, 'Accepted|Rejected|Wait listed')
) %>%
mutate(on = strptime(on, '%d %b %Y') %>% ymd,
게시날짜 = strptime(게시날짜, '%d %b %Y') %>% ymd) %>%
arrange(desc(on))
return(tab)
}
(df <- gc.mon('duke bio*'))
py_config()
?use_python('/usr/local/Caskroom/miniconda/base/bin/python')
use_python('/usr/local/Caskroom/miniconda/base/bin/python')
gc.mon <- function(query, prgrm = 'PhD') {
writeLines(query, 'query.txt')
source_python('main.py', NULL)
gc <- read.csv('tmp.csv')
colnames(gc)
tab <- gc %>%
filter(
stringr::str_detect(과정, prgrm) &
stringr::str_detect(결과, 'Accepted|Rejected|Wait listed')
) %>%
mutate(on = strptime(on, '%d %b %Y') %>% ymd,
게시날짜 = strptime(게시날짜, '%d %b %Y') %>% ymd) %>%
arrange(desc(on))
return(tab)
}
(df <- gc.mon('duke bio*'))
py_available()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/Caskroom/miniconda/base/bin/python")
gc.mon <- function(query, prgrm = 'PhD') {
writeLines(query, 'query.txt')
source_python('main.py', NULL)
gc <- read.csv('tmp.csv')
colnames(gc)
tab <- gc %>%
filter(
stringr::str_detect(과정, prgrm) &
stringr::str_detect(결과, 'Accepted|Rejected|Wait listed')
) %>%
mutate(on = strptime(on, '%d %b %Y') %>% ymd,
게시날짜 = strptime(게시날짜, '%d %b %Y') %>% ymd) %>%
arrange(desc(on))
return(tab)
}
(df <- gc.mon('duke bio*'))
py_config()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/Caskroom/miniconda/base/bin/python")
